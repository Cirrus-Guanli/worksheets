<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>ISO | {{ title }}</title>
    <link href="/Apps/Bootstrap/dist/css/materialize.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/4.6.2/css/bootstrap.min.css">
    <link href="https://fonts.googleapis.com/css?family=Material+Icons|Work+Sans&amp;display=swap" rel="stylesheet">
    <link rel="icon" type="image/x-icon" href="/images/favicon.ico">
    <style>
      :root {
        --primary_blue: #024774;
        --ltblue: #f2f8ff;
        --font-stack: 'work sans', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
      }
      html {
        font-size: 11px;
      }
      body {
        font-family: var(--font-stack);
      }
      .bg-nav {
        background-color: var(--primary_blue);
      }
      #brand {
        gap: 10px;
      }
      #brand svg {
        width: 42px;
        height: 34px;
      }
      #brand h1 {
        font-size: 1.4rem;
      }
      .text-bg-blue {
        color: #f2f8ff !important;
      }
      .navbar .logout-dropdown .rounded-circle {
        display: inline-block;
        width: 30px;
        height: 30px;
      }
      .text-text-ph {
        color: rgba(0, 0, 0, 0.42) !important;
      }
      .rounded-circle {
        border-radius: 50% !important;
      }
      .bg-bg-blue {
        background-color: #f2f8ff !important;
      }
      .btn-nope {
        text-shadow: 0 0 0 transparent;
        background: transparent;
        border: 0 solid transparent;
        box-shadow: 0 0 0 transparent;
      }
      .navbar .logout-dropdown .rounded-circle .material-icons {
        margin-top: 3px;
      }
      .text-secondary {
        color: #024774 !important;
      }
      .table-hover tbody tr:hover {
        background-color: #fafad2;
      }
      .btn-purple {
        color: #fff;
        background-color: #511d9a;
        border-color: #511d9a;
      }
      .btn-purple:hover, .btn-purple:focus {
        color: #fff;
        background-color: #3d1377;
        border-color: #3d1377;
      }
      .table .thead-light th {
        background-color: var(--ltblue);
      }
      .modal fieldset {
        display: block;
        border: 1px solid #ccc;
      }
      .modal legend {
        display: inline-block;
        width: auto;
        padding-inline: 0.15rem;
        margin-left: 0.25rem;
        text-transform: uppercase;
        font-size: 0.875rem;
        letter-spacing: 0.05rem;
        color: #511d9a;
        background-color: white;
      }
      .highlight {
        background-color: rgba(241, 231, 254, 0.5);;
      }
      .emptycell {
        background-color: #fff;
        background-image: repeating-linear-gradient(
          45deg,
          transparent,
          transparent 5px,
          #f1f5f9 5px,
          #f1f5f9 10px
        );
        background-position: center;
      }
    </style>
  </head>
  <body>
    {% include "header.liquid" %}
    {% include "subheader.liquid" %}
    <div class="container-fluid my-3" style="display: grid;gap:0.5rem;">
      {{ content }}
    </div>
    {% include "modal.liquid" %}
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js"
      integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.6.2/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-Fy6S3B9q64WdZWQUiU+q4/2Lc9npb8tCaSX9FK7E8HnRr0Jz8D6OP9dO5Vg3Q9ct" crossorigin="anonymous"></script>
    <script>
      // Function to toggle font size and anchor text
      function toggleFontSize() {
        const htmlElement = document.documentElement;
        const fontToggleLink = document.getElementById('fontToggle');

        // Check the current font size and toggle between 11px (small) and 16px (normal)
        if (htmlElement.style.fontSize === '11px') {
          htmlElement.style.fontSize = '16px';  // Switch to larger size (normal)
          fontToggleLink.innerText = 'Switch to Small Text';  // Update anchor text
          localStorage.setItem('fontSize', '16px');  // Save user preference
        } else {
          htmlElement.style.fontSize = '11px';  // Switch to small size
          fontToggleLink.innerText = 'Switch to Normal Text';  // Update anchor text
          localStorage.setItem('fontSize', '11px');  // Save user preference
        }
      }

      // On page load, set the font size and anchor text based on saved preferences
      window.onload = function () {
        const savedFontSize = localStorage.getItem('fontSize');
        const fontToggleLink = document.getElementById('fontToggle');

      // Set font size and toggle link text based on the saved preference
        if (savedFontSize) {
          document.documentElement.style.fontSize = savedFontSize;
          fontToggleLink.innerText = savedFontSize === '11px' ? 'Switch to Normal Text' : 'Switch to Small Text';
        } else {
          // Default to small font size (11px) if no preference is saved
          document.documentElement.style.fontSize = '11px';
          fontToggleLink.innerText = 'Switch to Normal Text';
        }
      };
    </script>
    {% if page.url == '/350Web1/' %}
      <script>
        function toggleRow(checkbox) {
          const row = checkbox.closest('tr'); // Get the current row
          const pointsCell = row.querySelector('[data-subtopic-points]'); // Get the 'points' cell
          const extraCell = row.querySelector('[data-subtopic-subtotal]'); // Get the 'extra' cell
          const totalSubtotalCell = document.getElementById('totalSubtotal'); // Get the total subtotal cell in the tfoot

          let totalSubtotal = parseInt(totalSubtotalCell.textContent); // Current total

          if (checkbox.checked) {
            const pointsValue = parseInt(pointsCell.getAttribute('data-subtopic-points')); // Get the points value
            extraCell.textContent = pointsValue; // Update the 'extra' cell with points value
            extraCell.classList.add('highlight'); // Add highlight class
            totalSubtotal += pointsValue; // Add to total subtotal
          } else {
            const pointsValue = parseInt(extraCell.textContent); // Get the current subtotal (previously points value)
            extraCell.textContent = '0'; // Reset the 'extra' cell to 0
            extraCell.classList.remove('highlight'); // Remove highlight class
            totalSubtotal -= pointsValue; // Subtract from total subtotal
          }

          totalSubtotalCell.textContent = totalSubtotal; // Update the total subtotal in the footer
        }
      </script>
    {% endif %}
  </body>
</html>